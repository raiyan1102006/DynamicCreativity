{"ast":null,"code":"import _classCallCheck from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/famousclark/Sites/creativity-project/src/containers/RightHandPanel.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Button, Header, Modal, Container, Icon } from 'semantic-ui-react';\nimport WelcomeScreen from '../components/WelcomeScreen.jsx';\nimport TaskScreen from '../components/TaskScreen.jsx';\nimport TaskTimerScreen from '../components/TaskTimerScreen.jsx';\nimport NetworkTimerScreen from '../components/NetworkTimerScreen.jsx';\nimport UsersTimerScreen from '../components/UsersTimerScreen.jsx';\nimport BlankTimerScreen from '../components/BlankTimerScreen.jsx';\nimport UsersScreen from '../components/UsersScreen.jsx';\nimport NetworkPanel from './NetworkPanel.jsx';\n\nvar RightHandPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RightHandPanel, _Component);\n\n  //state = { showTask: false, show: false }\n  function RightHandPanel(props) {\n    _classCallCheck(this, RightHandPanel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RightHandPanel).call(this, props)); // Bind all methods to 'this' context here\n  }\n\n  _createClass(RightHandPanel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      console.log(nextProps);\n      console.log(nextState);\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isTaskActive = this.props.showTask;\n      var isNetworkActive = this.props.showNetwork;\n      var isUsersActive = this.props.showUsers;\n      console.log(this.props);\n      var mainSegmentStyles = {\n        height: \"100%\",\n        paddingBottom: \"0em\"\n      };\n      var welcomeStyles = {\n        color: \"#fff\",\n        paddingTop: \"2em\"\n      };\n      var bottomSegment = {\n        marginTop: \"0rem\"\n      };\n\n      if (!isTaskActive && !isNetworkActive && !isUsersActive) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(BlankTimerScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(WelcomeScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      } else if (isTaskActive && !isNetworkActive && !isUsersActive) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(TaskTimerScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(TaskScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      } else if (!isTaskActive && isNetworkActive && !isUsersActive) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(NetworkTimerScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(NetworkPanel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }));\n      } else if (!isTaskActive && !isNetworkActive && isUsersActive) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(UsersTimerScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(UsersScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return RightHandPanel;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  };\n}\n\nexport default connect(mapStateToProps)(RightHandPanel);","map":{"version":3,"sources":["/Users/famousclark/Sites/creativity-project/src/containers/RightHandPanel.jsx"],"names":["React","Component","connect","BrowserRouter","Router","Route","Link","Button","Header","Modal","Container","Icon","WelcomeScreen","TaskScreen","TaskTimerScreen","NetworkTimerScreen","UsersTimerScreen","BlankTimerScreen","UsersScreen","NetworkPanel","RightHandPanel","props","nextProps","nextState","console","log","isTaskActive","showTask","isNetworkActive","showNetwork","isUsersActive","showUsers","mainSegmentStyles","height","paddingBottom","welcomeStyles","color","paddingTop","bottomSegment","marginTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport {Button, Header, Modal, Container, Icon} from 'semantic-ui-react';\n\nimport WelcomeScreen from '../components/WelcomeScreen.jsx';\nimport TaskScreen from '../components/TaskScreen.jsx';\nimport TaskTimerScreen from '../components/TaskTimerScreen.jsx';\nimport NetworkTimerScreen from '../components/NetworkTimerScreen.jsx';\nimport UsersTimerScreen from '../components/UsersTimerScreen.jsx';\nimport BlankTimerScreen from '../components/BlankTimerScreen.jsx';\nimport UsersScreen from '../components/UsersScreen.jsx';\nimport NetworkPanel from './NetworkPanel.jsx';\n\nclass RightHandPanel extends Component {\n\n  //state = { showTask: false, show: false }\n\n  constructor(props) {\n    super(props);\n    // Bind all methods to 'this' context here\n  }\n\n  componentWillMount() {\n\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  render() {\n\n    let isTaskActive = this.props.showTask;\n    let isNetworkActive = this.props.showNetwork;\n    let isUsersActive = this.props.showUsers;\n    console.log(this.props);\n\n    let mainSegmentStyles = {\n      height: \"100%\",\n      paddingBottom: \"0em\"\n    };\n\n    let welcomeStyles = {\n      color: \"#fff\",\n      paddingTop: \"2em\"\n    };\n\n    let bottomSegment = {\n      marginTop: \"0rem\"\n    };\n\n    if (!isTaskActive && !isNetworkActive && !isUsersActive) {\n      return (\n      <div>\n        <BlankTimerScreen/>\n        <WelcomeScreen/>\n\n      </div>\n      );\n\n    }else if (isTaskActive && !isNetworkActive && !isUsersActive){\n      return (\n        <div>\n          <TaskTimerScreen/>\n          <TaskScreen/>\n\n        </div>\n      );\n\n    }else if (!isTaskActive && isNetworkActive && !isUsersActive){\n      return (\n        <div>\n          <NetworkTimerScreen/>\n          <NetworkPanel/>\n\n        </div>\n      );\n    }else if (!isTaskActive && !isNetworkActive && isUsersActive){\n      return (\n        <div>\n          <UsersTimerScreen/>\n          <UsersScreen/>\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  }\n}\n\nexport default connect(mapStateToProps)(RightHandPanel);\n"]},"metadata":{},"sourceType":"module"}