{"ast":null,"code":"import _classCallCheck from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/famousclark/Sites/creativity-project/src/components/TaskScreen.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button, Header, Modal, Container, Icon, Form, Message, Segment } from 'semantic-ui-react';\n\nvar TaskScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskScreen, _Component);\n\n  function TaskScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TaskScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskScreen).call(this, props)); // Bind all methods to 'this' context here\n\n    _this.state = {\n      modalOpen: false,\n      showErr: false,\n      inputOne: ' ',\n      inputTwo: ' ',\n      inputThree: ' ',\n      inputFour: ' ',\n      inputFive: ' ',\n      inputSix: ' '\n    };\n\n    _this.show = function (dimmer) {\n      return function () {\n        return _this.setState({\n          dimmer: dimmer\n        });\n      };\n    };\n\n    _this.onHandleNetworkTask = function () {\n      _this.onHandleClose();\n\n      var dispatch = _this.props.dispatch;\n\n      if (_this.props.showTask) {\n        dispatch({\n          type: 'FETCH_NETWORK',\n          payload: false\n        });\n      } else if (_this.props.showNetwork) {\n        dispatch({\n          type: 'FETCH_SHOW_USERS',\n          payload: false\n        });\n      }\n    };\n\n    _this.onHandleOpen = function () {\n      if (_this.state.inputOne === ' ' || _this.state.inputTwo === ' ' || _this.state.inputThree === ' ' || _this.state.inputFour === '' || _this.state.inputFive === ' ' || _this.state.inputSix === ' ') {\n        _this.setState({\n          showErr: true\n        });\n      } else {\n        _this.show('blurring');\n\n        _this.setState({\n          modalOpen: true\n        });\n      }\n    };\n\n    _this.onHandleClose = function () {\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.onHandleOneChange = function (event) {\n      _this.setState({\n        inputOne: event.target.value\n      });\n    };\n\n    _this.onHandleTwoChange = function (event) {\n      _this.setState({\n        inputTwo: event.target.value\n      });\n    };\n\n    _this.onHandleThreeChange = function (event) {\n      _this.setState({\n        inputThree: event.target.value\n      });\n    };\n\n    _this.onHandleFourChange = function (event) {\n      _this.setState({\n        inputFour: event.target.value\n      });\n    };\n\n    _this.onHandleFiveChange = function (event) {\n      _this.setState({\n        inputFive: event.target.value\n      });\n    };\n\n    _this.onHandleSixChange = function (event) {\n      _this.setState({\n        inputSix: event.target.value\n      });\n    };\n\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleNetworkTask = _this.onHandleNetworkTask.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleOpen = _this.onHandleOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleClose = _this.onHandleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleOneChange = _this.onHandleOneChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleTwoChange = _this.onHandleTwoChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleThreeChange = _this.onHandleThreeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleFourChange = _this.onHandleFourChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleFiveChange = _this.onHandleFiveChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleSixChange = _this.onHandleSixChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaskScreen, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modalContent = \"In this next section, we will show you what others in your network came up with! You will be able to edit your own list if you get any new ideas! But remember only UNIQUE ideas count - if you just copy from others, we'll know :p\";\n      var modalTimeContent = \"This is a time section\";\n      var networkScreenLink = \"/networkScreen\";\n      var usersScreenLink = \"/usersScreen\";\n      var dimmer = this.state.dimmer;\n      var isNetworkActive = this.props.showNetwork;\n      var isErr = this.state.showErr;\n      var width = 12;\n      var modalStyles = {\n        paddingRight: \"2em\"\n      };\n      var segmentStyles = {\n        paddingBottom: \"7em\"\n      };\n      var paddingRight = {\n        paddingRight: '0'\n      };\n\n      if (isNetworkActive) {\n        paddingRight = {\n          paddingRight: '30em'\n        };\n        console.log(paddingRight);\n      }\n\n      if (isErr) {\n        return React.createElement(Segment, {\n          vertical: true,\n          style: segmentStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Form, {\n          error: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"First Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleOneChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Second Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleTwoChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Third Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleThreeChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Fourth Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleFourChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Fifth Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleFiveChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Sixth Use \"), React.createElement(Form.Input, {\n          onChange: this.onHandleSixChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        })), React.createElement(Message, {\n          error: true,\n          header: \"Action Forbidden\",\n          content: \"Please fill in the boxes!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), React.createElement(Container, {\n          textAlign: \"right\",\n          style: modalStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          dimmer: dimmer,\n          trigger: React.createElement(Button, {\n            color: \"teal\",\n            onClick: this.onHandleOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, \"Next\"),\n          open: this.state.modalOpen,\n          onClose: this.onHandleClose,\n          basic: true,\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(Header, {\n          size: \"medium\",\n          icon: \"browser\",\n          content: \"Ready?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }), React.createElement(Modal.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, modalContent), React.createElement(\"header\", {\n          size: \"small\",\n          color: \"red\",\n          content: modalTimeContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })), React.createElement(Modal.Actions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"green\",\n          onClick: this.onHandleNetworkTask,\n          inverted: \"inverted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: {\n            isNetworkActive: isNetworkActive\n          } ? {\n            networkScreenLink: networkScreenLink\n          } : {\n            usersScreenLink: usersScreenLink\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \"Next\")))))));\n      } else {\n        return React.createElement(Segment, {\n          vertical: true,\n          style: segmentStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"First Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleOneChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"Second Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleTwoChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Third Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleThreeChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"Fourth Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleFourChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Fifth Use\"), React.createElement(Form.Input, {\n          onChange: this.onHandleFiveChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"Sixth Use \"), React.createElement(Form.Input, {\n          onChange: this.onHandleSixChange,\n          placeholder: \"Enter Input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        })), React.createElement(Container, {\n          textAlign: \"right\",\n          style: modalStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          trigger: React.createElement(Button, {\n            color: \"teal\",\n            onClick: this.onHandleOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, \" Begin \"),\n          open: this.state.modalOpen,\n          onClose: this.onHandleClose,\n          basic: true,\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(Header, {\n          icon: \"browser\",\n          size: \"huge\",\n          content: \"Ready?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }), React.createElement(Modal.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, modalContent), React.createElement(Header, {\n          size: \"small\",\n          color: \"red\",\n          content: modalTimeContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        })), React.createElement(Modal.Actions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"green\",\n          onClick: this.onHandleNetworkTask,\n          inverted: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: {\n            isNetworkActive: isNetworkActive\n          } ? {\n            networkScreenLink: networkScreenLink\n          } : {\n            usersScreenLink: usersScreenLink\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Next\")))))));\n      }\n    }\n  }]);\n\n  return TaskScreen;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  };\n}\n\nexport default connect(mapStateToProps)(TaskScreen);","map":{"version":3,"sources":["/Users/famousclark/Sites/creativity-project/src/components/TaskScreen.jsx"],"names":["React","Component","Link","connect","Button","Header","Modal","Container","Icon","Form","Message","Segment","TaskScreen","props","state","modalOpen","showErr","inputOne","inputTwo","inputThree","inputFour","inputFive","inputSix","show","dimmer","setState","onHandleNetworkTask","onHandleClose","dispatch","showTask","type","payload","showNetwork","onHandleOpen","onHandleOneChange","event","target","value","onHandleTwoChange","onHandleThreeChange","onHandleFourChange","onHandleFiveChange","onHandleSixChange","bind","nextProps","nextState","modalContent","modalTimeContent","networkScreenLink","usersScreenLink","isNetworkActive","isErr","width","modalStyles","paddingRight","segmentStyles","paddingBottom","console","log","mapStateToProps","showUsers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  Button,\n  Header,\n  Modal,\n  Container,\n  Icon,\n  Form,\n  Message,\n  Segment\n} from 'semantic-ui-react';\n\nclass TaskScreen extends Component {\n\n  state = {\n    modalOpen: false,\n    showErr: false,\n    inputOne:' ',\n    inputTwo:' ',\n    inputThree:' ',\n    inputFour:' ',\n    inputFive:' ',\n    inputSix:' '\n  };\n\n  show = dimmer => () => this.setState({dimmer});\n\n  constructor(props) {\n    super(props);\n    // Bind all methods to 'this' context here\n    (this: any).onHandleNetworkTask = this.onHandleNetworkTask.bind(this);\n    (this: any).onHandleOpen = this.onHandleOpen.bind(this);\n    (this: any).onHandleClose = this.onHandleClose.bind(this);\n    (this: any).onHandleOneChange = this.onHandleOneChange.bind(this);\n    (this: any).onHandleTwoChange = this.onHandleTwoChange.bind(this);\n    (this: any).onHandleThreeChange = this.onHandleThreeChange.bind(this);\n    (this: any).onHandleFourChange = this.onHandleFourChange.bind(this);\n    (this: any).onHandleFiveChange = this.onHandleFiveChange.bind(this);\n    (this: any).onHandleSixChange = this.onHandleSixChange.bind(this);\n\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  onHandleNetworkTask = () => {\n    this.onHandleClose();\n    const{dispatch} = this.props;\n    if (this.props.showTask) {\n      dispatch({type: 'FETCH_NETWORK', payload: false});\n    }else if(this.props.showNetwork){\n      dispatch({type: 'FETCH_SHOW_USERS', payload: false});\n    }\n  }\n\n  onHandleOpen = () => {\n    if (this.state.inputOne===' '||\n      this.state.inputTwo===' '||\n      this.state.inputThree===' '||\n      this.state.inputFour==='' ||\n      this.state.inputFive===' '||\n      this.state.inputSix===' ') {\n        this.setState({showErr: true});\n    }else{\n      this.show('blurring');\n      this.setState({modalOpen: true});\n    }\n  }\n\n  onHandleClose = () => {\n    this.setState({modalOpen: false})\n  }\n\n  onHandleOneChange = (event) => {\n    this.setState({inputOne: event.target.value});\n  }\n\n  onHandleTwoChange = (event) => {\n    this.setState({inputTwo: event.target.value});\n  }\n\n  onHandleThreeChange = (event) => {\n    this.setState({inputThree: event.target.value});\n  }\n\n  onHandleFourChange = (event) => {\n    this.setState({inputFour: event.target.value});\n  }\n\n  onHandleFiveChange = (event) => {\n    this.setState({inputFive: event.target.value});\n  }\n\n  onHandleSixChange = (event) => {\n    this.setState({inputSix: event.target.value});\n  }\n\n  render() {\n\n    const modalContent = \"In this next section, we will show you what others in your network came up with! You will be able to edit your own list if you get any new ideas! But remember only UNIQUE ideas count - if you just copy from others, we'll know :p\" ;\n\n    const modalTimeContent = \"This is a time section\";\n\n    const networkScreenLink = \"/networkScreen\";\n    const usersScreenLink = \"/usersScreen\";\n\n    const {dimmer} = this.state;\n\n    let isNetworkActive = this.props.showNetwork;\n    let isErr = this.state.showErr;\n    let width = 12;\n    let modalStyles = {\n      paddingRight: \"2em\"\n    };\n\n    let segmentStyles = {\n      paddingBottom: \"7em\"\n    };\n\n    let paddingRight = {\n      paddingRight: '0'\n    };\n\n    if (isNetworkActive) {\n      paddingRight = {\n        paddingRight: '30em'\n      };\n      console.log(paddingRight);\n    }\n\n    if (isErr) {\n      return (\n        <Segment vertical style={segmentStyles}>\n          <Form error>\n            <Form.Field>\n              <label>First Use</label>\n              <Form.Input  onChange={this.onHandleOneChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Second Use</label>\n              <Form.Input  onChange={this.onHandleTwoChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Third Use</label>\n              <Form.Input  onChange={this.onHandleThreeChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Fourth Use</label>\n              <Form.Input  onChange={this.onHandleFourChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Fifth Use</label>\n              <Form.Input  onChange={this.onHandleFiveChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Sixth Use </label>\n              <Form.Input  onChange={this.onHandleSixChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Message\n              error\n              header='Action Forbidden'\n              content='Please fill in the boxes!'\n            />\n            <Container textAlign='right' style={modalStyles}>\n              <Modal\n                dimmer={dimmer}\n                trigger={\n                  <Button\n                    color='teal'\n                    onClick={this.onHandleOpen}>\n                      Next\n                  </Button>}\n                open={this.state.modalOpen} onClose={this.onHandleClose}\n                basic\n                size='small'>\n\n                <Header\n                  size='medium'\n                  icon='browser'\n                  content='Ready?'/>\n\n                <Modal.Content>\n                  <div>\n                    {modalContent}\n                  </div>\n\n                  <header\n                    size='small'\n                    color='red'\n                    content={modalTimeContent}/>\n                </Modal.Content>\n\n                <Modal.Actions>\n                  <Button\n                    color='green'\n                    onClick={this.onHandleNetworkTask} inverted=\"inverted\">\n                    <Icon\n                      name='checkmark'/>\n                    <Link to={{isNetworkActive} ? {networkScreenLink} : {usersScreenLink} }>Next</Link>\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </Container>\n          </Form>\n        </Segment>\n      );\n    }else{\n      return (\n        <Segment vertical style={segmentStyles}>\n          <Form >\n            <Form.Field>\n              <label>First Use</label>\n              <Form.Input  onChange={this.onHandleOneChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Second Use</label>\n              <Form.Input  onChange={this.onHandleTwoChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Third Use</label>\n              <Form.Input  onChange={this.onHandleThreeChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Fourth Use</label>\n              <Form.Input  onChange={this.onHandleFourChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Fifth Use</label>\n              <Form.Input  onChange={this.onHandleFiveChange} placeholder='Enter Input'/>\n            </Form.Field>\n            <Form.Field>\n              <label>Sixth Use </label>\n              <Form.Input  onChange={this.onHandleSixChange} placeholder='Enter Input'/>\n            </Form.Field>\n\n            <Container textAlign='right' style={modalStyles}>\n              <Modal trigger={<Button color = 'teal' onClick = {\n                  this.onHandleOpen\n                } > Begin </Button>} open={this.state.modalOpen} onClose={this.onHandleClose} basic size='small'>\n\n                <Header icon='browser' size='huge' content='Ready?'/>\n\n                <Modal.Content>\n                  <div>\n                    {modalContent}\n                  </div>\n\n                  <Header\n                    size='small'\n                    color='red'\n                    content={modalTimeContent}/>\n                </Modal.Content>\n\n                <Modal.Actions>\n                  <Button color='green' onClick={this.onHandleNetworkTask} inverted>\n                    <Icon name='checkmark'/>\n                    <Link to={{isNetworkActive} ? {networkScreenLink} : {usersScreenLink} }>Next</Link>\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </Container>\n          </Form>\n        </Segment>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  }\n}\n\nexport default connect(mapStateToProps)(TaskScreen);\n"]},"metadata":{},"sourceType":"module"}