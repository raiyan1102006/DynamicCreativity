{"ast":null,"code":"import _classCallCheck from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/famousclark/Sites/creativity-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/famousclark/Sites/creativity-project/src/components/NetworkTimerScreen.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Header, Modal, Container, Icon } from 'semantic-ui-react';\n\nvar NetworkTimerScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NetworkTimerScreen, _Component);\n\n  function NetworkTimerScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NetworkTimerScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NetworkTimerScreen).call(this, props)); // Bind all methods to 'this' context here\n\n    _this.state = {\n      elapsed: 240,\n      interval: ''\n    };\n    _assertThisInitialized(_assertThisInitialized(_this)).onHandleStartTimer = _this.onHandleStartTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onGetSeconds = _this.onGetSeconds.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _assertThisInitialized(_assertThisInitialized(_this)).onGetMinutes = _this.onGetMinutes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NetworkTimerScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.showNetwork) {\n        var interval = setInterval(this.onHandleStartTimer, 1000);\n        this.setState({\n          interval: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      return true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.state.interval);\n    }\n  }, {\n    key: \"onGetSeconds\",\n    value: function onGetSeconds() {\n      return ('0' + this.state.elapsed % 60).slice(-2);\n    }\n  }, {\n    key: \"onGetMinutes\",\n    value: function onGetMinutes() {\n      return Math.floor(this.state.elapsed / 60);\n    }\n  }, {\n    key: \"onHandleStartTimer\",\n    value: function onHandleStartTimer() {\n      var dispatch = this.props.dispatch;\n\n      if (this.state.elapsed <= 0) {\n        clearInterval(this.state.interval);\n\n        if (this.props.showNetwork) {\n          dispatch({\n            type: 'FETCH_SHOW_USERS',\n            payload: false\n          });\n        }\n      } else {\n        this.setState({\n          elapsed: this.state.elapsed - 1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isTimerActive = this.props.showTask;\n      var mainSegmentStyles = {\n        height: \"100%\",\n        paddingBottom: \"0em\"\n      };\n      var timeSegmentStyles = {\n        height: \"10em\"\n      };\n      var timeStyles = {\n        paddingTop: \"2em\",\n        fontSize: \"3em\",\n        color: \"#00B5AD\"\n      };\n      var welcomeStyles = {\n        color: \"#fff\",\n        paddingTop: \"2em\"\n      };\n      var textStyles = {\n        fontSize: \"1.4em\",\n        lineHeight: \"2em\"\n      };\n      var modalStyles = {\n        paddingRight: \"2em\"\n      };\n      return React.createElement(\"div\", {\n        className: \"ui vertical segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Container, {\n        textAlign: \"center\",\n        style: timeSegmentStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Header, {\n        style: timeStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.onGetMinutes(), \":\", this.onGetSeconds())));\n    }\n  }]);\n\n  return NetworkTimerScreen;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  };\n}\n\nexport default connect(mapStateToProps)(NetworkTimerScreen);","map":{"version":3,"sources":["/Users/famousclark/Sites/creativity-project/src/components/NetworkTimerScreen.jsx"],"names":["React","Component","connect","Button","Header","Modal","Container","Icon","NetworkTimerScreen","props","state","elapsed","interval","onHandleStartTimer","bind","onGetSeconds","onGetMinutes","showNetwork","setInterval","setState","nextProps","nextState","clearInterval","slice","Math","floor","dispatch","type","payload","isTimerActive","showTask","mainSegmentStyles","height","paddingBottom","timeSegmentStyles","timeStyles","paddingTop","fontSize","color","welcomeStyles","textStyles","lineHeight","modalStyles","paddingRight","mapStateToProps","showUsers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport {Button, Header, Modal, Container, Icon} from 'semantic-ui-react';\n\nclass NetworkTimerScreen extends Component {\n\n  state = {elapsed: 240, interval: ''}\n\n  constructor(props) {\n    super(props);\n    // Bind all methods to 'this' context here\n    (this: any).onHandleStartTimer = this.onHandleStartTimer.bind(this);\n    (this: any).onGetSeconds = this.onGetSeconds.bind(this);\n    (this: any).onGetMinutes = this.onGetMinutes.bind(this);\n  }\n\n  componentWillMount() {\n\n  }\n\n  componentDidMount() {\n    if (this.props.showNetwork) {\n      var interval = setInterval(this.onHandleStartTimer, 1000);\n      this.setState({interval: interval});\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.state.interval);\n  }\n\n  onGetSeconds(){\n    return ('0' + this.state.elapsed % 60).slice(-2);\n  }\n\n  onGetMinutes(){\n    return Math.floor(this.state.elapsed / 60);\n  }\n\n  onHandleStartTimer(){\n    const{dispatch} = this.props;\n    if (this.state.elapsed <= 0) {\n      clearInterval(this.state.interval);\n      if(this.props.showNetwork){\n        dispatch({type: 'FETCH_SHOW_USERS', payload: false});\n      }\n    } else {\n      this.setState({elapsed: (this.state.elapsed - 1)});\n    }\n  }\n\n  render() {\n\n    let isTimerActive = this.props.showTask;\n\n    let mainSegmentStyles = {\n      height: \"100%\",\n      paddingBottom: \"0em\"\n    };\n\n    let timeSegmentStyles = {\n      height: \"10em\"\n    };\n\n    let timeStyles = {\n      paddingTop: \"2em\",\n      fontSize: \"3em\",\n      color: \"#00B5AD\"\n    };\n\n    let welcomeStyles = {\n      color: \"#fff\",\n      paddingTop: \"2em\"\n    }\n\n    let textStyles = {\n      fontSize: \"1.4em\",\n      lineHeight: \"2em\"\n    };\n\n    let modalStyles = {\n      paddingRight: \"2em\"\n    };\n\n    return (\n      <div className=\"ui vertical segment\">\n        <Container textAlign='center' style={timeSegmentStyles}>\n          <Header style={timeStyles}>{this.onGetMinutes()}:{this.onGetSeconds()}</Header>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    showTask: state.showTask,\n    showNetwork: state.showNetwork,\n    showUsers: state.showUsers\n  }\n}\n\nexport default connect(mapStateToProps)(NetworkTimerScreen);\n"]},"metadata":{},"sourceType":"module"}